services:
  openwebui:
    image: ghcr.io/open-webui/open-webui:latest-slim
    container_name: openwebui
    depends_on:
      - infinity-embed
      - infinity-rerank
      - litellm
      - ollama
      - pgvector
    restart: always
    networks:
      - proxy
    volumes:
      - ${DATA_DIR}/llm_stack:/app/backend/data
    environment:
      - DATA_DIR=${DATA_DIR}
      - OLLAMA_BASE_URL=http://ollama:11434
      - DATABASE_URL=postgresql://openwebui:${POSTGRES_PASSWORD}@pgvector:5432/openwebui
      # OpenAI API settings
      - ENABLE_OPENAI_API=true
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # RAG embedder settings
      - VECTOR_DB=pgvector
      - RAG_EMBEDDING_BATCH_SIZE=32
      - RAG_EMBEDDING_ENGINE=${RAG_EMBED_ENGINE}
      - RAG_EMBEDDING_ENDPOINT=${RAG_EMBED_ENDPOINT}
      - RAG_EMBEDDING_MODEL=${RAG_EMBED_MODEL}
      # Reranker settings
      - ENABLE_RAG_HYBRID_SEARCH=${RAG_HYBRID_SEARCH}
      - RERANKER_ENDPOINT=${RAG_RERANK_ENDPOINT}
      - RAG_RERANKING_MODEL=${RAG_RERANK_MODEL}
      # Chunking and search settings
      - CHUNK_SIZE=${RAG_CHUNK_SIZE}
      - CHUNK_OVERLAP=${RAG_CHUNK_OVERLAP}
      - RAG_TOP_K=${RAG_TOP_K}
      - RAG_TOP_K_RERANKER=${RAG_TOP_K_RERANK}
      - RAG_HYBRID_BM25_WEIGHT=${RAG_HYBRID_BM25_WEIGHT}
      - RAG_RELEVANCE_THRESHOLD=${RAG_RELEVANCE_THRESHOLD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.open-webui.entrypoints=websecure"
      - "traefik.http.routers.open-webui.rule=Host(`webui.${TRAEFIK_ACME_DOMAIN}`)"
      - "traefik.http.routers.open-webui.tls.certresolver=cloudflare"
      - "traefik.http.services.open-webui.loadbalancer.server.port=8080"
