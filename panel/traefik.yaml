services:
  traefik:
    image: traefik:v3.5
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    user: ${UID}:${GID}
    userns_mode: host
    networks:
      - proxy
      - metrics
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    environment:
      # Cloudflare Zero DNS API token
      - CF_DNS_API_TOKEN_FILE=/run/secrets/cf_dns_api_token
      # Root working directory on your host
      # Traefik will store its configuration and certificates under $DATA_DIR/traefik
      - DATA_DIR=${DATA_DIR}
      # Group id should match with docker group id on host
      # otherwise Traefik won't be able to access Docker socket
      - UID=${UID}
      - GID=${GID}
      # ACME CA server configuration
      - TRAEFIK_ACME_EMAIL=${TRAEFIK_ACME_EMAIL}
      - TRAEFIK_ACME_SERVER=${TRAEFIK_ACME_SERVER}
      # Path to store the generated ACME certificates
      # Make sure this file is writable by the user running Traefik,
      # and have correct permissions `chmod 600 $DATA_DIR/acme.json`
      - TRAEFIK_ACME_STORAGE=${TRAEFIK_ACME_STORAGE}
      # Traefik authentication and domain name
      - TRAEFIK_ACME_DOMAIN=${TRAEFIK_ACME_DOMAIN}
    secrets:
      - cf_dns_api_token
      - traefik_htpasswd
    volumes:
      - ${DATA_DIR}/traefik/acme.json:${TRAEFIK_ACME_STORAGE}
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      # Traefik log level
      # Possible values: DEBUG, INFO, WARN, ERROR, FATAL
      # Default is INFO, but DEBUG is useful for troubleshooting
      - --log.level=${TRAEFIK_LOG_LEVEL}
      # Enable Docker as a provider
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=proxy
      # Entry points
      - --api.dashboard=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Enable DNS challenge
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.propagation.delayBeforeChecks=45s
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      # ACME configuration for Let's Encrypt
      - --certificatesresolvers.cloudflare.acme.caserver=${TRAEFIK_ACME_SERVER}
      - --certificatesresolvers.cloudflare.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesresolvers.cloudflare.acme.storage=${TRAEFIK_ACME_STORAGE}
      # Enable Prometheus metrics
      - --metrics.prometheus=true
      - --metrics.prometheus.entrypoint=metrics
      # API access from localhost only
      - --api.insecure=true
    labels:
      # Global middleware for HTTP to HTTPS redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.traefik-auth.basicauth.usersfile=/run/secrets/traefik_htpasswd"
      # Traefik dashboard router
      - "traefik.enable=true"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.middlewares=traefik-auth@docker"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.${TRAEFIK_ACME_DOMAIN}`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      # Homepage integration
      - "homepage.group=Core"
      - "homepage.name=Traefik"
      - "homepage.icon=traefik.svg"
      - "homepage.href=https://traefik.${TRAEFIK_ACME_DOMAIN}"
      - "homepage.description=Reverse Proxy & Dashboard"
      - "homepage.widget.type=traefik"
      - "homepage.widget.url=http://traefik:8080"

secrets:
  cf_dns_api_token:
    file: ${DATA_DIR}/traefik/cf_dns_api_token
  traefik_htpasswd:
    file: ${DATA_DIR}/traefik/htpasswd
